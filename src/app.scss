@import "vars";

:root {
    --background: #321f28;
    --light-background: #734046;
    --accent: #f7b76e;
    --red: #bf404f;
    --gray: #ccc;
    font-weight: 600;
    line-height: 1.6;
}

html,
body {
    margin: 0;
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

.split {
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
}

body {
    background-color: var(--background);
    min-height: 100vh;
}

#root {
    min-height: 100vh;
}

main {
    min-height: 100%;
}

:root {
    font-family: "Nunito", sans-serif;
    color: var(--accent);
    font-size: min(20px, 4vw);
}

nav {
    height: $nav-height;
    background-color: var(--light-background);
    font-size: 2rem;
}

.bold {
    font-weight: bold;
}

h1 {
    font-size: 3rem;
    text-shadow: $default-shadow;
}

article h1 {
    font-size: 1.2em;
}

.card h1 {
    text-shadow: unset;
}

.flash {
    @include centered;
    position: absolute;
    bottom: 2rem;
    left: 2rem;
    background-color: #734046;
    box-shadow: $default-shadow;
    border-radius: 0.3rem;
    padding: 0rem 1rem;
    padding-right: 0;
    overflow: hidden;

    .flash-icon {
        margin-right: 0.5rem;
    }
    > span {
        white-space: pre;
        padding: 0.5rem 0;
    }

    &::after {
        content: "";
        position: absolute;
        bottom: 0;
        left: 0;
        width: 100%;
        height: 4px;
        background-color: var(--accent);
        animation: flash 5s linear forwards;
    }
}

.create-new-room {
    @include centered;
    gap: 1rem;
    font-size: 1.25rem;
    .button {
        @extend .squared;
    }
}

nav > ul {
    list-style: none;
    gap: 1rem;
    padding: 0 1rem;
    height: 100%;

    a {
        text-decoration: none;
        text-shadow: $default-shadow;
    }
}

.svg-inline--fa {
    filter: drop-shadow($default-shadow);
    font-size: 0.9em;
}

.card .svg-inline--fa {
    filter: drop-shadow($slim-shadow);
}

ul {
    margin: 0;
}

a {
    color: inherit;
}

::placeholder {
    color: inherit;
    opacity: 0.5;
}

input, select, textarea {
    background-color: var(--light-background);
    border-radius: 0.3em;
    padding: 0.5rem 0.7rem;
    color: inherit;
    font-size: inherit;
    font-family: inherit;
    font-weight: inherit;
    border: none;
    box-shadow: $default-shadow;
    @include for-mobile {
        width: 100%;
    }
}

a.card-link {
    text-decoration: none;
}

.spacer {
    flex: 1;
}

.card {
    display: inline-block;
    background-color: var(--light-background);
    border-radius: 0.3em;
    box-shadow: $default-shadow;
    padding: 0.5rem 0.7rem;
    text-shadow: $slim-shadow;
}

.narrow {
    max-width: 64rem;
    margin: 0 auto;
    padding: 1rem;
}

#room-list {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1rem;
    margin-top: 1rem;

    @include for-mobile {
        grid-template-columns: 1fr;
    }
}

.listed-room {
    display: inline-grid;
    gap: 0.5rem;
    padding: 1rem;
    grid-template-columns: auto 2.5rem;
    grid-template-rows: repeat(2, 1fr);
    h1 {
        grid-area: 1 / 1 / 2 / 3;
    }
}

.squared {
    @include centered;
    aspect-ratio: 1/1;
    width: 2.5rem;
}

.play-button {
    @extend .squared;
    font-size: 1.25rem !important;
    width: 100%;
    box-shadow: $default-shadow;
}

@include for-buttons {
    font-size: inherit;
    appearance: none;
    color: inherit;
    background-color: transparent;
    &:not(.flat) {
        background-color: var(--accent);
        color: var(--background);
    }
    font-family: inherit;
    font-weight: inherit;
    border: none;
    border-radius: 0.3rem;
    cursor: pointer;
    padding: 0.5rem 0.7rem;
    &:not(.inline) {
        min-width: 6rem;
    }

    .svg-inline--fa {
        filter: none;
    }
}

.flat .svg-inline--fa {
    filter: none;
}

.dead {
    text-decoration: line-through;
}

.disconnected {
    opacity: 0.5;
}

.current {
    font-weight: bold;
}

.matching {
    color: #77ffaa;
}

.shake {
    animation: shake 250ms ease-in-out forwards;
}

.death-shake {
    animation: death-shake 500ms ease-in-out forwards;
}

.center {
    @include centered;
}

.column {
    flex-direction: column;
}

form:not(.inline) {
    margin-bottom: 1rem;
    margin-right: 1rem;
    display: inline-flex;
    gap: 1rem;
    flex-wrap: wrap;
}

@keyframes flash {
    from {
        width: 100%;
    }

    to {
        width: 0;
    }
}

@keyframes shake {
    10% {
        transform: translateX(-5%);
    }

    30% {
        transform: translateX(5%);
    }

    50% {
        transform: translateX(-7.5%);
    }

    70% {
        transform: translateX(7.5%);
    }

    90% {
        transform: translateX(-5%);
    }

    100% {
        transform: translateX(0);
    }
}

@keyframes death-shake {
    10% {
        transform: translateX(-5%) rotate(1deg);
        color: var(--red);
    }

    30% {
        transform: translateX(5%) rotate(-2deg);
    }

    50% {
        transform: translateX(-7.5%) rotate(3deg);
    }

    70% {
        transform: translateX(7.5%) rotate(-2deg);
    }

    90% {
        transform: translateX(-5%) rotate(3deg);
    }

    100% {
        transform: translateX(0) rotate(0deg);
        color: unset;
    }
}

